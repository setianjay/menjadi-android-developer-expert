plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

apply from: '../shared_dependencies.gradle'

android {
    compileSdk 31

    defaultConfig {
        minSdk 21
        targetSdk 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_KEY", '"13b1cda985269ed32518f3f9814be278"'
            buildConfigField "String[]", "CERTIFICATES_PINNER", "{" +
                    '"sha256/oD/WAoRPvbez1Y2dfYfuo4yujAcYHXdv1Ivb2v2MOKk="' + "," +
                    '"sha256/JSMzqOOrtyOT1kmau6zKhgT676hGgczD5VMdRMyJZFA="' + "," +
                    '"sha256/++MBgDH5WGvL9Bcn5Be30cRcL0f5O+NyoXuWtQdX1aI="' + "}"
            buildConfigField "String", "LOCAL_PASSPHARSE", '"dicodingnidcamp"'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField "String", "API_KEY", '"13b1cda985269ed32518f3f9814be278"'
            buildConfigField "String[]", "CERTIFICATES_PINNER", "{" +
                    '"sha256/oD/WAoRPvbez1Y2dfYfuo4yujAcYHXdv1Ivb2v2MOKk="' + "," +
                    '"sha256/JSMzqOOrtyOT1kmau6zKhgT676hGgczD5VMdRMyJZFA="' + "," +
                    '"sha256/++MBgDH5WGvL9Bcn5Be30cRcL0f5O+NyoXuWtQdX1aI="' + "}"
            buildConfigField "String", "LOCAL_PASSPHARSE", '"dicodingnidcamp"'
        }
    }
    buildFeatures{
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    /* swipe refresh layout */
    api "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshVersion"

    /* glide */
    api "com.github.bumptech.glide:glide:$glideVersion"

    /* livedata */
    api "androidx.lifecycle:lifecycle-livedata-ktx:$livedataVersion" //asLiveData

    /* lottie */
    api "com.airbnb.android:lottie:$lottieVersion"

    /* retrofit */
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    /* room */
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion" //room support coroutine

    /* sql cipher */
    implementation "net.zetetic:android-database-sqlcipher:$sqlCipherVersion" //encrypt local database
    implementation "androidx.sqlite:sqlite-ktx:$sqlLiteKtxVersion"

    /* view model */
    api "androidx.activity:activity-ktx:$activityKtxVersion" // by viewModels on activity
    api "androidx.fragment:fragment-ktx:$fragmentKtxVersion" // by viewModels on fragment
}